// Code generated by go-bindata. DO NOT EDIT.
// sources:
// static/css/highlight.css
// static/css/watcher.css
// static/html/dashboard.html
// static/html/footer.html
// static/html/head.html
// static/html/log.html
// static/html/logs.html
// static/html/request.html
// static/js/dashboard.js
// static/js/log.js
// static/js/logs.js
// static/js/request.js
// static/js/utils.js

package goscope


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataStaticCssHighlightcss = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x4d\x6f\xdb\x30\x0c\xbd\xeb\x57\x10\xe8\xad\x58\xda\x2c\x5b\xd2" +
	"\xd4\xbd\x0d\xdd\x61\xfb\x13\x03\x25\xd1\x8e\x16\x4a\xf2\x24\xaa\xad\x31\xec\xbf\x0f\x6e\x6a\xc7\x1f\xe0\x45\xef" +
	"\x99\x14\xdf\x7b\xf2\xfd\xad\x52\xcf\x98\x4c\x61\x04\x13\x39\x26\xc8\xe6\x44\x9e\xa0\x4e\xd1\x83\x9c\x08\x7e\x92" +
	"\x7c\x4b\xe8\x42\x86\x1a\xbd\xe3\x0e\x62\x0d\x3f\x9e\xbf\x67\xa5\x6e\xef\x95\x52\x77\x27\xfe\x9d\xe1\xaf\x02\x00" +
	"\xb0\x2e\xb7\x8c\x5d\x05\x9a\xa3\x39\x3f\xbd\x73\xf1\x85\x52\xcd\xf1\x75\xf3\x56\x01\x16\x89\x17\xb6\x45\x6b\x5d" +
	"\x68\x2a\xd8\xde\xed\xc9\x5f\x38\x8d\xe6\xdc\xa4\x58\x82\xad\xe0\x66\xa7\xfb\xba\x7c\x78\xd7\x55\xc1\x8d\xc6\xbe" +
	"\x9e\xd4\xbf\x8f\xad\x9b\x2c\x29\x86\xe6\xd3\x07\x22\xdf\x9e\x30\xbb\x41\xcc\x30\x85\x47\x3c\xe2\x6e\x32\xa5\x0b" +
	"\x33\xc9\x30\xf5\xa7\x44\xa1\x01\xb0\x0b\xe7\xe1\x1c\x8a\xd7\x94\x06\x94\xa8\xa1\xb7\xf6\xda\x27\x94\x90\x17\x9b" +
	"\x0e\xc7\xc7\xc3\x4c\x9f\x89\x76\xbc\x3a\x13\x93\x91\x98\x36\x86\x31\xaf\x34\x1e\x68\xb7\xa3\xc9\xe4\xc2\x4b\x1d" +
	"\x83\x6c\xb2\x74\x4c\x15\x38\x41\x76\x66\xd2\x7b\xa6\xee\x35\x26\xbb\x5a\x24\xd8\x5c\x39\x23\x2e\x86\x01\xa2\x48" +
	"\x72\xba\x5c\x7d\x07\xf4\xe3\xf9\x05\x93\x43\xcd\xb4\x90\x68\xf4\xc3\xf1\xcb\x34\xc6\x16\x13\xfa\xa5\x11\xfd\xd8" +
	"\xd7\xfc\x89\x5c\x68\x16\x5d\x0f\x5b\xfc\xbc\xdf\x4f\xbb\x8a\xce\xe3\x8b\x48\xd7\x8e\x62\x74\x71\x2c\xbf\x5c\x98" +
	"\x61\x17\x66\x82\x73\xe7\x75\xe4\x95\x7d\xb7\x4e\xa4\xf7\xbd\x22\xdb\x4c\xc5\xc6\x71\x39\xf9\x96\x51\x68\x9a\xde" +
	"\xc8\x0d\xd1\x8c\x39\x5a\xeb\xfa\x5c\x17\xf6\x68\x6b\xbe\x1e\xcc\xec\x3f\xf0\x9e\xc2\x68\xd0\x12\xd3\xf4\x39\x3c" +
	"\x09\x2e\x13\xaa\xfb\xea\xaf\xf8\x1f\x00\x00\xff\xff\xd2\x1e\x48\xc6\xa1\x03\x00\x00"

func bindataStaticCssHighlightcssBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticCssHighlightcss,
		"static/css/highlight.css",
	)
}



func bindataStaticCssHighlightcss() (*asset, error) {
	bytes, err := bindataStaticCssHighlightcssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/css/highlight.css",
		size: 929,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595249303, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticCssWatchercss = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xd1\x8e\x9b\x3c\x10\x85\xef\x79\x0a\x8b\xbd\x8d\x57\x3f\x84\xfc" +
	"\xdd\xc0\xdd\xaa\xea\xdd\x3e\xc4\xd8\x1e\x83\xb5\x64\x86\xda\x26\xdd\xa8\xca\xbb\x57\xa4\x24\x82\x28\x49\x37\x55" +
	"\x23\xae\xd0\xcc\x9c\xef\xf8\xcc\x34\xd9\x42\x34\xf9\x42\x34\x4b\xf1\x33\x11\x42\x08\xcb\x14\xa5\x85\x8d\x6b\x77" +
	"\xa5\x48\xdf\x80\x3c\x77\x98\x2e\x44\x1a\x80\x82\x0c\xe8\x9d\x4d\xab\x64\x9f\x24\x8a\xcd\x6e\x9c\x51\xa0\xdf\x6b" +
	"\xcf\x3d\x99\x52\x3c\x65\x7a\xf8\xaa\x43\x41\x73\xcb\xbe\x14\x4f\xd6\xda\xea\x3e\x75\xcd\x06\x2f\x3a\xfa\xe6\x3c" +
	"\x88\x37\x26\x4e\x17\x62\xc3\xc4\xa1\x03\x8d\xc9\x3e\x79\x3e\xfd\x98\xbb\xe6\x92\x67\x82\xad\x02\x2f\x5b\x47\xef" +
	"\xe3\x64\xc4\x8f\x28\x0d\x6a\xf6\x10\x1d\x53\x29\x88\x09\xaf\xbc\x48\xb1\x37\xe8\x8f\x2d\x83\x1e\xe8\xe8\xb6\x28" +
	"\xff\x4a\xf6\x8b\xd6\x4b\x65\xab\x73\x5f\x65\xc3\x5b\xf4\xd7\x64\x7a\x32\xe8\x5b\x77\x4b\x4b\xf7\x21\xf2\x46\x46" +
	"\x73\x69\x63\xf9\x6b\xfe\x9a\x7f\x3d\x34\xc6\xe6\xd8\x70\x78\x96\xf4\x60\x5c\x1f\x4a\x51\x74\x1f\xbf\x85\x70\x87" +
	"\xd2\x6d\xa0\x3e\x2d\xc7\xb5\xed\x31\x8e\x59\x7d\x66\x79\xec\x9a\x38\x8a\xa0\x5a\x9c\xb3\x86\x8d\x38\xaa\x4b\x91" +
	"\x0f\xb0\x49\x41\x73\xdb\x42\x17\xb0\x14\x01\x3b\xf0\x10\xc7\xa0\x3b\xa8\x1d\x41\x44\xa9\xfa\x18\x99\x46\xb5\x4f" +
	"\x6c\xe8\x6c\x70\x66\xf5\x3c\xbd\x3f\x25\x3e\xe8\x45\x50\x77\x79\xb8\xba\x81\x5b\xc9\x2b\x30\x35\xca\xd0\x6b\x8d" +
	"\x21\x8c\x9c\x0e\x8c\x39\x44\x56\x9c\x45\x36\x9b\xbe\xec\xe8\xc4\x97\xc7\x5a\x66\xd7\x66\xb5\x9a\xd2\x1c\x59\x7e" +
	"\x0c\x4a\x2f\xcd\x0a\xa6\xa8\xd8\xfb\xef\x0f\x41\xad\xfe\x5b\x66\xeb\x62\x96\x21\x6a\x26\x03\x7e\x77\xe3\xd6\x2f" +
	"\xfb\xf8\x0c\xaf\x58\x17\x45\x31\xe3\x19\xa0\xfa\x74\x5f\xff\x16\xf6\x7f\x9e\xa9\xec\x65\x0a\xfb\x01\x9e\x1c\xd5" +
	"\x8f\xa1\xbd\x14\x36\x33\x55\xb2\xff\x15\x00\x00\xff\xff\xcc\x17\xc7\xc1\x36\x06\x00\x00"

func bindataStaticCssWatchercssBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticCssWatchercss,
		"static/css/watcher.css",
	)
}



func bindataStaticCssWatchercss() (*asset, error) {
	bytes, err := bindataStaticCssWatchercssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/css/watcher.css",
		size: 1590,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595249252, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticHtmlDashboardhtml = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x51\x6f\x9b\x30\x18\x7c\xef\xaf\xf0\x3c\xa9\x6f\xd8\x65\xea\xa6" +
	"\xad\x31\x48\x34\x61\x21\x52\x1a\x10\x61\x9b\xfa\x14\x39\xf0\x15\x9c\x19\xc3\xb0\x13\xa5\x42\xf9\xef\x13\x10\xb6" +
	"\x6e\x9d\xb2\x27\xec\xfb\xee\xbb\x3b\x59\x07\x7b\x33\x0b\xa7\xc9\x63\xe4\xa3\xc2\x94\xd2\xbd\x62\xdd\x07\x49\xae" +
	"\x72\x07\x83\xc2\x1d\x00\x3c\x73\xaf\x10\x42\xa8\x6d\xc9\x34\x7c\x78\x08\x57\x9b\xc0\xf7\x66\x7e\x7c\x3a\xf5\x30" +
	"\xd3\xe6\x59\x82\xdb\xb6\x24\x58\xcc\x83\xe5\x62\x1e\x24\x9b\x75\xf2\xb8\xf4\xd7\xa7\x13\xa3\xc3\xf0\x2f\xe2\x37" +
	"\x2f\x99\x06\x7e\xfc\x9a\xc6\xe8\x60\xc7\xb6\x55\xf6\xec\x5e\xb5\x2d\x59\x79\x5f\xef\xbd\xce\x8a\x65\xe2\x80\x52" +
	"\xc9\xb5\x76\x70\x69\xd9\xa8\xb6\x6c\x64\xe0\x68\xac\x14\x94\x81\x06\x9f\x3d\x0c\xdf\x4a\x40\x22\x73\x70\x03\x3f" +
	"\xf6\xa0\x8d\xd5\x23\x18\xf5\x0e\x0e\x96\x42\x81\x55\x80\xc8\x0b\x73\x87\x6c\xf2\x01\xca\x09\x2a\x79\x93\x0b\x75" +
	"\x87\x6e\x10\xdf\x9b\x6a\x32\x4a\xd1\x7e\xf3\x7c\xc9\xc4\x61\x38\xf5\xb7\xed\xde\x98\x4a\xbd\xb4\xd1\x56\xdd\xc0" +
	"\xc1\xaa\x79\x0e\x78\x8c\x59\xf3\x5c\x28\x6e\xc0\x1a\xe8\xd8\x65\xba\xe6\x6a\x9c\x3e\x55\xca\x58\xb7\x47\x89\xdd" +
	"\xeb\xb7\x1f\xdf\x7f\x7a\x37\x61\xb4\x1b\xbb\xa8\x13\x62\x74\xd8\xf9\xed\x79\xad\xb6\xba\x9e\x5c\x8e\xa0\xba\xf7" +
	"\xb8\x1c\xa1\xa3\xa0\x4b\x39\x6e\xc7\x1c\x7f\x46\x60\xf4\xd7\x0b\xb4\x2d\xf9\x1c\x86\x49\x5f\x80\x33\xcc\x74\xda" +
	"\x88\xda\x0c\x73\x09\x06\xe5\x95\x4e\xab\x1a\x7c\x65\x1a\x01\x3a\x82\x26\xe2\x39\x20\xa7\xdb\xf5\x57\x49\xbc\xf0" +
	"\xd7\x9b\xc8\x8f\x37\x91\x37\xf7\x7b\x95\x71\x7f\x14\x6a\x5b\xf2\x25\x59\x2c\x37\xeb\x69\xbc\x88\x92\xa1\x22\xaf" +
	"\x29\x33\x6f\x1d\xdc\x87\x5e\x3c\xbb\xc0\x43\xba\x49\x1d\x5c\x18\x53\xeb\x3b\x4a\xd3\x4c\xed\x34\x49\x65\xb5\xcf" +
	"\x9e\x24\x6f\x80\xa4\x55\x49\xf9\x8e\x1f\xa9\x14\x5b\x4d\x0b\x91\x17\xb2\xeb\x06\xd9\x69\x6a\xdf\x10\x9b\xd8\x2f" +
	"\xb0\x52\x28\xb2\xd3\xd8\xfd\x8f\xc7\x5e\xd5\xdf\xf3\x41\xf8\x28\x2a\x4d\x33\xa1\xcd\x70\xfc\x97\x02\x1d\xaa\xce" +
	"\x68\xff\x03\xfe\x0c\x00\x00\xff\xff\x9b\x78\x29\x1a\x90\x03\x00\x00"

func bindataStaticHtmlDashboardhtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticHtmlDashboardhtml,
		"static/html/dashboard.html",
	)
}



func bindataStaticHtmlDashboardhtml() (*asset, error) {
	bytes, err := bindataStaticHtmlDashboardhtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/html/dashboard.html",
		size: 912,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595246762, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticHtmlFooterhtml = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xc7\xb1\xad\xc2\x30\x10\x00\xd0\x3e\x53\x9c\xae\xff\xff\x7a\x64\x5b" +
	"\x2c\xc0\x0c\xe8\x1c\x2e\x71\x84\xb1\xad\xcb\x91\x88\x29\x98\x80\x8e\x21\x98\x87\x05\x58\x01\xd1\xd1\xf0\xba\xe7" +
	"\xa2\x52\xe8\x5c\x0b\x3b\x3e\x08\xac\x93\x25\x78\xde\xee\xaf\xc7\x15\xe2\x05\x1c\x43\x9f\x79\x9e\x3d\x16\x5e\x22" +
	"\xeb\x5f\x9e\xca\x11\xc1\x58\x47\x31\x8f\xfb\x98\xf9\x73\x95\xec\xb1\xd4\xda\xa4\x88\x42\xa9\x2a\x83\xa8\x8a\x62" +
	"\x07\xbf\x25\x95\xc1\x63\x32\x6b\xf3\x86\x68\x9c\x2c\x9d\xe3\x7f\x5f\x4f\xc4\x8b\x28\x8f\x32\xe4\xba\x62\xd8\x7e" +
	"\xcd\x11\x87\xce\x51\x0b\xef\x00\x00\x00\xff\xff\x44\xf5\x22\x41\xb4\x00\x00\x00"

func bindataStaticHtmlFooterhtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticHtmlFooterhtml,
		"static/html/footer.html",
	)
}



func bindataStaticHtmlFooterhtml() (*asset, error) {
	bytes, err := bindataStaticHtmlFooterhtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/html/footer.html",
		size: 180,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595248716, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticHtmlHeadhtml = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcd\xc1\x4a\x03\x31\x10\xc6\xf1\x7b\x9f\x22\xe4\xe0\x45\x9a\x58\x4f" +
	"\x22\x9b\xea\x52\xac\x14\x6c\x2d\x58\xcf\x32\x64\x67\x37\xa3\xd9\x24\x64\x06\x65\x29\x7d\x77\x0f\x7a\x53\x10\x3c" +
	"\x7e\xf0\xf1\xfb\x37\x23\x0a\x28\x1f\xa0\x32\x8a\xd3\xcf\x87\xf5\xfc\x4a\x2f\x67\x8d\x90\x44\x5c\x1e\x8f\xa6\xdd" +
	"\xef\x1f\x36\xab\xf6\xb0\x79\xdc\xbd\xec\xda\xed\xdd\xe9\xa4\xe6\xea\x3e\x3f\xf9\x5c\xb0\xb1\x5f\xb7\x59\x13\x29" +
	"\xbd\xa9\x50\xb1\x77\x3a\x88\x14\xbe\xb6\xd6\x77\xc9\xbc\x72\x87\x91\xde\xab\x49\x28\x76\x08\x56\x2a\x0a\x14\x9c" +
	"\x6c\x05\x62\x4a\x9e\xf9\x76\x61\x16\xe6\xe2\x7b\x9b\x91\x92\xf1\xcc\x5a\x55\x8c\x4e\xb3\x4c\x11\x39\x20\x8a\xb6" +
	"\xbf\x37\xfa\x9c\x84\xcd\x90\xf3\x10\x11\x0a\xb1\xf1\x79\xb4\x9e\xf9\xf2\xa6\x87\x91\xe2\xe4\xb6\x90\x6a\x2e\x78" +
	"\xd6\x11\x97\x08\x93\xe3\x0f\x28\x3f\xf5\x7f\xe2\x6b\xaa\x70\xbe\xca\xdd\xdf\xfc\x67\x00\x00\x00\xff\xff\x57\x59" +
	"\xba\xa4\x66\x01\x00\x00"

func bindataStaticHtmlHeadhtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticHtmlHeadhtml,
		"static/html/head.html",
	)
}



func bindataStaticHtmlHeadhtml() (*asset, error) {
	bytes, err := bindataStaticHtmlHeadhtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/html/head.html",
		size: 358,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595247033, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticHtmlLoghtml = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x8f\x9b\x30\x10\x85\xef\xf9\x15\xae\xef\xe0\x4d\x72\xa3\x8e" +
	"\x25\xc4\x22\x40\x82\x10\x05\xa4\x6a\x4f\x91\x17\x1c\x70\x64\x6c\x84\xbd\xdb\xac\x22\xfe\x7b\x65\x48\xb6\xb4\x3d" +
	"\x54\x7b\xf2\xe8\xcd\x9b\xef\x21\x66\xf0\xb7\xe7\x3c\x28\x5f\x0e\x21\x68\x4d\x27\xc8\x0a\xdb\x07\x08\x2a\x9b\x1d" +
	"\x64\x12\x5a\x81\xd1\x9a\xac\x00\x00\xe0\x76\x73\x83\x3c\xcb\xf2\xfd\x29\x0e\xfd\xe7\xf0\x38\x8e\x93\x8c\xb5\xf9" +
	"\x10\x8c\xdc\x6e\x6e\x9c\x44\x71\x9a\x44\x71\x79\x2a\xca\x97\x34\x2c\xc6\x11\xa3\xb9\xf9\x97\xf1\x87\x5f\x06\x71" +
	"\x78\xfc\xd7\x86\xd1\x1c\x87\x5f\x55\xfd\x41\x56\xb8\xe6\xef\xa0\x12\x54\xeb\x1d\xec\x9c\x2d\xe8\x9d\x2d\x30\xec" +
	"\x6a\x9c\x8a\x49\xc3\x06\x08\xa6\xb1\x1d\x14\x5c\x32\xa7\x65\xbc\x69\x8d\x07\x36\xac\xfb\x0e\xef\x89\xcb\xf9\xda" +
	"\xfb\xe9\x6c\xd0\x16\x88\xe6\x5e\x4c\x24\xc1\xce\xe6\x93\xd3\xd1\xa1\xe1\xd2\x7b\x02\xf4\xcd\xa8\x07\x64\x02\xb5" +
	"\xeb\x07\xe7\xac\xa4\x71\xae\x02\x74\xce\x06\x92\x54\x35\x0d\xab\x01\x35\xf6\xe7\x94\x49\x16\x8e\x23\x70\x6c\xed" +
	"\x1f\x0e\x69\x12\xf8\x65\x92\xef\x4f\x7b\xff\xae\x47\xaa\xa8\x54\xcf\x30\x6a\xd7\x0b\x74\x4f\x4a\xde\x31\x6f\x21" +
	"\x0c\x8c\xe0\x4a\xd5\xec\x11\xd9\x0b\xca\xa5\xfd\x5a\x48\x3e\x63\x30\xb2\x0e\x82\x91\x75\xff\x9e\x45\xfd\x1f\xe4" +
	"\x8c\x69\x4d\x9b\x2f\xc0\xb3\xb0\x28\xfc\xe8\xff\x7c\x8c\x6a\xfe\x6e\xf7\x35\x3f\xba\x1a\x78\x6f\x2c\x20\xcd\xa3" +
	"\x53\x11\x1c\x93\x43\x39\xef\x75\x6e\x3c\x1c\x40\x0f\xd5\x0e\xb6\xc6\xf4\xda\x43\xa8\xaa\xe5\x45\xbb\x95\x50\x6f" +
	"\xf5\x59\xd0\x81\xb9\x95\xea\x10\xbd\xd0\x2b\x12\xfc\x55\xa3\x96\x37\xad\xb0\x3b\x75\x2f\x1a\xad\x9f\xdc\xb5\xbb" +
	"\x5e\x68\x1d\x97\xee\x45\x43\xb2\xc8\x40\xf7\xab\x41\xd3\x2d\xff\x0a\x00\x00\xff\xff\x87\xd0\x76\x18\xdb\x02\x00" +
	"\x00"

func bindataStaticHtmlLoghtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticHtmlLoghtml,
		"static/html/log.html",
	)
}



func bindataStaticHtmlLoghtml() (*asset, error) {
	bytes, err := bindataStaticHtmlLoghtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/html/log.html",
		size: 731,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595248408, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticHtmlLogshtml = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcf\x8e\x9b\x30\x10\xc6\xef\x79\x8a\xa9\x2b\xed\x0d\x7b\xa9\xb6" +
	"\x55\x9b\x18\xa4\x34\x4b\x93\x48\xd9\x80\x12\xda\x6a\x4f\x91\x01\x2f\x38\x35\x06\x61\x27\xca\x0a\xe5\xdd\x2b\x70" +
	"\xe8\xbf\x6d\xd3\x13\x9e\x99\x6f\xbe\xdf\x00\x63\xfa\xea\x3e\x9c\xc5\x8f\x51\x00\x85\x29\xa5\x3f\xa2\xdd\x03\x24" +
	"\x53\xb9\x87\xb8\x42\x5d\x82\xb3\xcc\x1f\x01\x00\xb4\x2d\x9e\x85\x0f\x0f\xe1\x7a\xb7\x08\xa6\xf7\xc1\xe6\x7c\xee" +
	"\xd3\x54\x9b\x67\xc9\xfd\xb6\xc5\x8b\xe5\x7c\xb1\x5a\xce\x17\xf1\x6e\x1b\x3f\xae\x82\xed\xf9\x4c\x89\x2d\xfe\x21" +
	"\xfc\x3a\x8d\x67\x8b\x60\xf3\x52\x46\x89\xc5\xd1\xa4\xca\x9e\xfd\x51\xdb\xe2\xf5\xf4\xcb\xc7\x69\x87\xa2\x99\x38" +
	"\x42\x2a\x99\xd6\x1e\x2a\x1d\x17\x6a\xc7\x05\xc3\x4f\xc6\x49\xb9\x32\xbc\x41\x17\x86\x61\x89\xe4\x20\x32\x0f\xc9" +
	"\x2a\x77\xfa\x08\x41\xef\xee\x21\x29\x14\x77\x0a\x2e\xf2\xc2\x8c\xc1\xc5\xef\x78\x39\x81\x92\x35\xb9\x50\x63\xb8" +
	"\x05\x76\x30\xd5\x64\xb0\x21\x7d\xe7\x25\xc8\xc4\xd1\x9e\xfa\x28\x39\x18\x53\xa9\x01\xa1\x9d\xba\xe1\x47\xa7\x66" +
	"\x39\x47\xc3\x78\x35\xcb\x85\x62\x86\x3b\x56\x8a\x7c\xaa\x6b\xa6\x86\xea\x53\xa5\x8c\x73\x77\x92\xc8\xbf\x79\xfd" +
	"\xfe\xed\x87\x37\x13\x4a\xba\xb2\x0f\x9d\x11\x25\xb6\xe7\x27\xef\x46\x25\xba\x9e\xfc\x1b\xaf\xba\x6f\x70\x1d\xdf" +
	"\x49\xe0\xda\x0c\x77\xc3\x0c\xbf\xe3\x29\xf9\xf1\xe6\x6d\x8b\x3f\x85\x61\xdc\xff\xf4\x4b\x9a\xea\xb4\x11\xb5\xb1" +
	"\x75\xc9\x0d\xe4\x95\x4e\xab\x9a\x07\xca\x34\x82\xeb\x88\x37\x11\xcb\x39\x78\x5d\x6f\xb0\x8e\x37\xcb\x60\xbb\x8b" +
	"\x82\xcd\x2e\x9a\xce\x83\xde\x65\xe8\x1f\x8c\xda\x16\x7f\x8e\x97\xab\xdd\x76\xb6\x59\x46\xb1\x5d\x8b\x97\x92\x55" +
	"\x38\xbf\xa2\x00\xdd\xa4\x1e\x2a\x8c\xa9\xf5\x98\x90\x34\x53\x7b\x8d\x53\x59\x1d\xb2\x27\xc9\x1a\x8e\xd3\xaa\x24" +
	"\x6c\xcf\x4e\x44\x8a\x44\x93\x42\xe4\x85\xec\xb6\x01\xef\x35\x71\x6f\xb1\x8b\xdd\x5f\x72\xa5\x50\x78\xaf\x91\xff" +
	"\x1f\xc6\x41\xd5\xdf\x72\x6b\x7c\x12\x95\x26\x99\xd0\xc6\x1e\xff\xe6\x40\xec\x62\x53\xd2\x5f\xb7\xef\x01\x00\x00" +
	"\xff\xff\xc0\x4f\xe6\x23\x7e\x03\x00\x00"

func bindataStaticHtmlLogshtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticHtmlLogshtml,
		"static/html/logs.html",
	)
}



func bindataStaticHtmlLogshtml() (*asset, error) {
	bytes, err := bindataStaticHtmlLogshtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/html/logs.html",
		size: 894,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595248004, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticHtmlRequesthtml = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\xc1\x93\xba\x36\x14\xc7\xef\xfe\x15\x29\x97\x5f\x7b\x80\xac\xbb" +
	"\x3d\x59\x64\x86\x55\x2a\xcc\xa8\x50\x88\xed\x6c\x2f\x4e\x84\x28\x71\x43\xa0\x49\x74\x77\xeb\xf8\xbf\x77\x10\x50" +
	"\x77\x3b\x53\xc1\x69\x7b\x42\x1e\xe1\xfb\xf1\xbd\xbc\xf7\x25\xe6\x77\x63\x7f\x84\x5e\x02\x07\xa4\x2a\x63\x56\xcf" +
	"\x2c\x2f\x80\x61\xbe\x19\x6a\x84\x6b\x65\x80\xe0\xc4\xea\x01\x00\xc0\xe1\x60\x8c\xfc\xd9\xcc\x9f\x2f\x5d\xc7\x1e" +
	"\x3b\xe1\xf1\x78\x0a\x9b\x52\x7d\x30\x62\x1d\x0e\x86\xeb\x4d\xdc\xa9\x37\x71\xd1\x32\x42\x2f\x53\x27\x3a\x1e\x4d" +
	"\x58\x3d\xfc\xb2\xf0\x37\x1b\x8d\x5c\x27\xfc\xfb\x32\x13\x56\x38\x73\x95\x27\x1f\x56\xcf\x4c\xe8\x1e\xc4\x0c\x4b" +
	"\x39\xd4\x32\xfd\x09\x14\xfa\x13\x50\xe4\x5d\xe9\x31\xe1\x8a\x08\xad\xd6\x5d\xed\x94\xca\x79\xb3\x90\xe3\xfd\x0a" +
	"\x0b\x9d\x51\xfe\xda\x2b\xf4\x1f\xc1\x3a\xe7\x4a\x7f\x67\x1a\xc8\x79\xcc\x68\xfc\x3a\xd4\xf2\x82\x70\x84\x57\xdf" +
	"\x7f\x13\xe4\x8f\x1d\x91\x4a\x57\x78\xf5\xed\x07\xcd\x0a\xab\xdb\x4a\x14\x56\xaa\xb7\x10\xe0\x26\x42\x16\x39\x97" +
	"\xe4\xc2\xa8\xee\x2f\xfa\x26\x4c\xe8\xfe\x76\xae\xe0\x54\xa2\xa1\xc6\x28\x27\x7a\x4a\xe8\x26\x55\x03\xf0\x48\xb2" +
	"\x9f\x9a\x2a\x94\xef\xd3\x64\xa8\x5d\x25\xa5\x35\x82\x7b\x4a\xde\xca\x00\xc8\x92\xc1\x9b\xfe\x08\x9f\x00\xdb\xd4" +
	"\x3f\x4e\x0c\x46\xd6\xea\x4c\xc8\xb0\xd8\x50\x3e\x78\x00\x78\xa7\xf2\x46\xfe\x84\x48\xfb\x8d\x60\x9d\x31\xc8\xf4" +
	"\xc7\x73\xdd\x00\x56\x65\x8f\x84\xce\x2f\x0b\x27\x42\x4b\xe4\xcd\x9c\xe3\x11\xe8\x65\xcc\x0e\x82\xa9\x37\xb2\x91" +
	"\xe7\xcf\x97\x73\xbb\x8e\x4f\xf2\x28\xce\x0b\x62\xc2\xb4\x7f\xc5\x28\xac\x11\xa3\x84\x2b\xe0\x05\xc0\x4e\x12\x41" +
	"\xa4\x1c\x5c\x3d\x15\xc4\x32\xe3\x3c\x21\xcd\x1f\x29\x18\xa6\xbc\xcc\x41\xb3\xae\xd8\xa3\xa9\xe7\xcc\xd1\xd2\x0b" +
	"\xca\xde\x2a\x97\x5b\x26\x2c\x5f\xbd\x08\xc1\xe2\x13\xd3\xcd\xa5\xea\x8e\x71\xfd\x08\xb5\x25\xfc\x4a\xc4\xaa\x3b" +
	"\x61\xe6\x20\xd7\x1f\xb7\x65\x04\x58\xa5\xdd\x19\x81\x8d\xdc\xb6\x84\x85\x60\xdd\x01\x8b\x70\xda\x56\x3f\x24\x6b" +
	"\x22\x04\x11\xdd\x21\xa1\xf3\xb3\x13\x86\xa5\x2b\xb5\x23\x21\x9a\x91\xee\x94\xaa\xa9\x5b\xd6\x8a\x26\x77\xd4\xca" +
	"\x6b\xbd\xdb\x0b\x49\x04\xb0\x37\x84\xdf\xd1\xb9\x8b\xc8\x09\x97\xf6\xc4\x99\xb7\xee\x5f\x97\xe0\x84\x88\x7f\x9c" +
	"\xc5\xf2\xb3\xb1\xc3\x1b\xa2\x6f\x65\xce\x3f\x0f\xca\xe9\x83\x11\xb5\x65\x3d\xe7\xc9\xc7\x7d\xa0\x67\x7f\xfc\x72" +
	"\x93\x52\x3b\x2e\xf8\xec\x9a\x17\x9f\xfe\xdf\x6c\xb3\x42\x9e\x7d\x33\x0a\xfc\x79\xe4\x9c\x7b\xec\xdf\xb4\xc5\x5a" +
	"\xba\xb3\x2f\x46\x0a\xab\xdd\x3d\xa4\x08\xd9\x68\xd1\x7a\xc3\xbb\x1a\x57\x0d\xe9\xe2\x5c\x5d\xe7\xfd\xcb\x66\xfc" +
	"\x07\x03\x5f\x13\x3a\x4c\x7c\x44\xff\xbc\x27\x87\xc8\xfb\xbd\x75\x0e\x77\x8e\x79\x4d\xba\x35\xe7\xf7\x8d\x76\x2d" +
	"\xde\x65\xb6\x9b\x8b\x8c\x05\x2d\xd4\xb5\x43\x44\xa3\xd0\x0b\x50\x75\xe8\xac\x1e\x36\xab\x80\x14\xf1\x50\x4b\x95" +
	"\x2a\xe4\x00\xc2\x38\xe1\x5b\x69\xc4\x2c\xdf\x25\x6b\x86\x05\x31\xe2\x3c\x83\x78\x8b\xdf\x21\xa3\x2b\x09\x53\xba" +
	"\x49\x59\x79\x08\x33\xb6\x12\xf6\x1f\x8c\xbe\xd1\xbf\x8a\x65\x94\x1b\x5b\xa9\x59\x57\x0c\x58\x1f\x69\xe1\xe9\xa0" +
	"\xfd\x57\x00\x00\x00\xff\xff\x8c\xab\x8c\xdf\x78\x0b\x00\x00"

func bindataStaticHtmlRequesthtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticHtmlRequesthtml,
		"static/html/request.html",
	)
}



func bindataStaticHtmlRequesthtml() (*asset, error) {
	bytes, err := bindataStaticHtmlRequesthtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/html/request.html",
		size: 2936,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595248701, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticJsDashboardjs = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4b\x6f\xdb\x38\x10\x3e\x47\xbf\x62\x56\x28\x5a\x19\x8d\xe4\x02" +
	"\x7b\xab\x2d\x1f\xb6\x09\x90\x02\x35\x1a\xa4\xc1\x9e\x16\x68\x26\xe4\x58\x22\x4a\x93\x5a\x72\x9c\x07\x02\xff\xf7" +
	"\x05\xf5\x8a\x14\x3f\x36\x59\x60\x79\xa2\x34\x1f\x3f\xce\x7c\xf3\xa0\x26\x06\x47\x7f\x6f\xc8\xf3\xf7\xd5\xca\x13" +
	"\x43\x0e\x9f\x66\x51\x24\xac\xf1\xbd\xe5\x1a\x6f\x35\x5d\x10\x4a\x72\x1e\x72\xb8\x89\xe6\xec\x16\xd1\xc9\x9c\x4b" +
	"\x10\x1a\xbd\xcf\x63\xb1\xf1\x6c\xd7\x29\xcb\x78\xf1\x83\x91\x37\x7e\x3e\xe5\xf2\x20\xe4\x4f\x72\xb7\x47\x00\xc0" +
	"\xf4\xc0\xa9\x20\xc3\xe4\xe2\xc5\x25\x72\x79\x94\xed\x02\xab\x8a\x0c\xc9\xa3\xa0\xc6\x38\x9f\x06\xc7\x6f\x66\x51" +
	"\x84\xfe\xd1\x08\x58\x6d\x8c\x60\x65\x0d\x14\xc4\x57\x4d\xac\x3e\xb1\xb5\x0e\x13\x78\x8a\x00\x00\xd8\x3d\xb6\xbb" +
	"\xb0\x3a\x59\x7c\x65\x8d\x27\xc8\x01\xef\x51\x31\xe0\x83\xb2\x3e\x2b\x88\x93\x0f\xd3\xc2\x7a\x61\x2b\x9a\xb6\xda" +
	"\xf9\x0f\xa7\x83\xf3\x61\x55\xe8\x70\xed\x3f\xbf\xf8\x1b\x56\xdc\x5c\x1d\x7f\x86\x66\x73\x3a\x42\x6c\xfb\xaf\xed" +
	"\x64\xd6\xef\x1d\xf1\xc6\x99\xde\xa5\x4c\x22\x63\x63\xdd\x82\x40\x16\x25\x24\xe4\x9c\x75\x93\x17\x51\x58\x4d\x59" +
	"\x6d\x68\xcd\xed\x99\x68\x1b\x45\xbd\x2a\x2b\xa5\xf5\xd5\xa0\x04\x92\x36\xa6\x33\x64\xec\xf8\x06\x05\x54\x63\x20" +
	"\x07\x69\xc5\x66\x4d\x86\x83\x20\xe7\x9a\xc2\xf6\x8f\xc7\xaf\x32\x89\x5b\x5c\xca\x01\x18\xb7\x57\x0e\x0f\x67\xca" +
	"\x18\x72\x17\xd7\xcb\x6f\x90\xef\x2b\xbe\xd1\x89\xe0\x45\xb6\xb2\xee\x1c\x45\x99\xf4\x3e\x27\x8a\x69\x3d\x0c\x76" +
	"\xe0\xe0\xd2\x06\x5f\x20\x87\x80\xc9\x58\xad\x69\x36\x82\x91\xc6\xca\x93\x84\x1c\x3c\x09\x6b\xa4\xbf\xb6\x3f\xd8" +
	"\x29\x53\x24\xc6\xde\x43\x3a\xa6\x19\xe5\x60\x6f\x08\x1f\x43\xab\x0c\x33\x38\x67\xd7\x95\xe6\xa8\xc4\xff\x8a\x4e" +
	"\x4e\x4e\x1a\x80\xec\x00\x55\xfa\x3b\x0c\xea\xf7\xdd\x13\x56\x95\x7e\x6c\x9a\xeb\x8b\xd5\xd6\xd5\x81\x66\x5d\xde" +
	"\x7f\xfa\xda\x32\xd9\xce\xa7\x2c\x17\x3b\x95\xf5\xaf\xc4\x4b\xe2\xd2\xca\x01\xf1\xba\xfe\xf1\x0a\xbe\xb5\x35\xd6" +
	"\x57\x28\x48\xc2\x0e\x75\xcd\x54\x21\x97\xff\xc1\xad\x36\x19\x6f\x3e\xb9\x03\xad\xe1\xf8\x3c\x13\x9c\xb7\x2e\xad" +
	"\xac\xaa\xb5\x87\xd2\xd1\x2a\x8f\x77\xba\x76\xda\x3a\xbf\x51\x72\x1b\x03\xa3\x2b\x88\xf3\xf8\xe7\xad\x46\xf3\x2b" +
	"\x06\x47\x3a\x8f\x8d\xb5\x61\xee\x38\x30\xd6\xd1\x8a\x9c\x0b\xa9\xdc\x7b\x7b\x58\xef\x9e\xee\x14\xdd\x2f\xad\xa3" +
	"\xaf\x6b\x2c\x68\xbb\xdf\xcd\x29\xee\x09\x75\x47\x80\x66\x8c\x75\x5f\x37\x6d\xeb\x4e\x46\xbd\xab\x8c\x70\x84\x9e" +
	"\xae\x86\xc3\x3d\xe9\x1a\x63\x3c\xf2\x3f\xe6\xd0\xc6\x7f\x6e\xd8\x29\xf2\x97\xe4\x2e\xb1\xa0\xd9\x88\x51\xd2\x31" +
	"\x46\xb5\x82\x64\xcc\xfa\x5b\x9e\xc3\xa7\x61\x27\x8e\xcd\xe9\xc1\x4b\xa1\x1b\x44\xa1\x27\x2b\x47\x77\xed\x8d\xc1" +
	"\xfa\x8a\xf1\xe2\xd3\x70\x26\xad\xb0\xa8\x67\xcc\x0b\x82\xcc\x1a\xa1\x95\xf8\x15\x66\xf7\xf8\x0d\xe8\x43\x39\x10" +
	"\x68\xe3\x58\xf3\x02\x84\x29\xdb\x4f\xff\xe1\xe3\x31\x8a\x71\xd2\x2b\x53\xe3\x83\x20\x66\xa3\x35\xbc\x7f\x5f\x13" +
	"\x64\x9a\x4c\xc1\x25\x2c\xc6\x32\xed\x4c\xdd\x80\xed\xe6\x33\x90\xf6\x34\x00\x1f\x48\xf3\xb3\x88\x41\x43\x43\x0f" +
	"\xfc\x56\x0d\xc3\x99\x5e\xc3\x17\x04\xaf\xd0\xf0\xa8\x5f\x6f\xd2\x70\xf6\xff\x8b\x78\x34\xe1\x75\x25\xf6\x7a\xa1" +
	"\x94\xe7\x77\x64\xf8\x9b\xf2\x1c\x9a\x3f\x89\xcf\xbe\x2f\xbf\x58\xc3\xe1\x9f\x45\x49\x32\x3e\x3d\x28\xca\xe0\x29" +
	"\x3a\x7b\x4b\xf0\x47\xdf\xe1\x59\xb4\x9d\xcc\xfe\x09\x00\x00\xff\xff\xf3\x10\x51\x33\xc7\x09\x00\x00"

func bindataStaticJsDashboardjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticJsDashboardjs,
		"static/js/dashboard.js",
	)
}



func bindataStaticJsDashboardjs() (*asset, error) {
	bytes, err := bindataStaticJsDashboardjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/js/dashboard.js",
		size: 2503,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595248667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticJsLogjs = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xc9\x4f\x2e\xcd\x4d\xcd\x2b\xd1\x4b\x4c\x49\x71\x2d\x4b\xcd\x2b\xf1" +
	"\xc9\x2c\x2e\x49\xcd\x4b\x2d\xd2\x50\x72\xf1\xf7\x75\xce\xcf\x2b\x01\x89\xe5\x27\xa6\xa4\xa6\x28\xe9\x28\xa4\x95" +
	"\xe6\x25\x97\x64\xe6\xe7\x29\x68\x68\x2a\x54\x73\x29\x28\x28\x28\x64\xe4\x64\x15\xeb\x65\xe6\x65\x96\x78\x64\xa6" +
	"\x67\xe4\x64\xa6\x67\x94\x64\xe6\xa5\xfb\xe7\x81\x74\x68\x68\x5a\x73\xd5\x6a\x5a\x03\x02\x00\x00\xff\xff\x66\xdc" +
	"\x4c\xaf\x62\x00\x00\x00"

func bindataStaticJsLogjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticJsLogjs,
		"static/js/log.js",
	)
}



func bindataStaticJsLogjs() (*asset, error) {
	bytes, err := bindataStaticJsLogjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/js/log.js",
		size: 98,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595244989, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticJsLogsjs = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x6f\xdb\x38\x10\x3d\x47\xbf\x62\x56\x28\x5a\x19\x8d\xec\x02" +
	"\x7b\xab\xad\x1c\x76\x13\xa0\x05\x6c\xb4\xc0\xe6\xbe\x61\xc9\xb1\x4c\x94\xe6\x68\x87\xe3\x7c\x20\xd0\x7f\x5f\x50" +
	"\x96\x19\x2b\x91\x77\x7d\x29\x4f\xb4\xe6\xcd\xf0\xcd\xe3\xe3\xd8\xa1\x80\xa3\xfa\xdb\x7a\x1d\x50\xa0\x82\x4f\xf3" +
	"\x2c\xd3\xe4\x43\xf7\xf5\x56\xfd\x70\xf8\x05\x95\x41\x0e\x50\xc1\x5d\xb6\x10\xbe\xca\x2e\x16\xb2\x01\xed\x54\x08" +
	"\x55\xae\x77\x41\x68\x5b\x8a\xc9\xaf\x56\x18\x82\xaa\x71\x31\x93\xcd\x49\xcc\xad\xdd\xfe\x37\x60\x1f\x5c\xcc\xe2" +
	"\x39\x77\xf3\x2c\x53\xe1\xc9\x6b\x58\xef\xbc\x16\x4b\x1e\x6a\x94\x25\xd5\xa1\xa0\x8e\xee\x04\x9e\x33\x00\x00\xe1" +
	"\xa7\x7e\x17\xd7\x9e\x3d\x63\x68\xc8\x07\x84\x0a\xd4\x83\xb2\x02\xea\xd1\x52\x98\xd6\x28\xc5\x87\x59\x4d\x41\x53" +
	"\x83\x33\x47\x75\xc9\xa8\x89\x4d\xf8\x70\x79\x54\x22\xae\x46\xb1\xda\x86\xcf\xaf\xbe\xc6\x95\xef\x4f\xcf\x3f\xc3" +
	"\x7e\x73\x39\x40\xb4\xe9\x57\x3b\x99\xa7\x3d\xa3\xec\xd8\x27\x56\x53\xa3\x44\x75\xc1\x16\xb4\x12\xbd\x81\x02\x99" +
	"\x89\x27\xaf\xfa\x20\x87\xd3\x2e\xd0\x87\xf7\x05\xdb\xac\xcd\xb2\xa4\xc9\xda\x3a\xb7\xec\xef\xaa\x70\x54\x5f\x2b" +
	"\x51\x87\x3a\xfd\xed\x76\x31\xa8\xc0\x90\xde\x6d\xd1\x4b\x94\xe1\xc6\x61\xdc\xfe\xf1\xf4\xd5\x14\x79\x14\x42\x22" +
	"\x28\xef\x8f\x38\x24\x4d\xad\xf7\xc8\x5f\x6e\x57\x4b\xa8\x5e\x3b\x22\x21\xe3\x89\xd3\x35\xf1\x8d\xd2\x9b\x22\xf1" +
	"\x2a\xac\xe0\xf6\xb8\xa1\x48\x86\xf1\x9f\x1d\x06\x59\x51\x3c\x1b\x2a\x88\x98\xa9\xd8\x2d\xce\x07\x30\x74\xaa\x09" +
	"\x68\xa0\x82\x80\x9a\xbc\x09\xb7\xf4\x97\xb0\xf5\x75\xe1\xe9\x01\xca\x61\x99\xc9\x4b\xea\x5b\xd6\x1f\xa3\x6d\x8f" +
	"\xef\x67\x21\x7c\xf0\x9d\xe0\xa3\x94\x1a\xbd\x20\xe7\x57\xd9\xc5\xc5\xc5\x3e\x6e\x0e\xf1\x2d\x79\x0a\x8d\xd2\x68" +
	"\xa0\x29\x7f\x87\x23\x9b\xbe\x7b\xee\x88\x77\x97\xd2\x2e\x66\x62\xc6\xd2\xdf\xe4\xf4\x5d\xf5\x09\xaf\x6d\x75\x3a" +
	"\xf3\x0d\xb4\x83\xab\x97\xe7\xc3\x81\xb8\x6c\xc8\x76\x9d\xc0\x86\x71\x5d\xe5\x63\x26\x9f\xf5\xbc\x77\xd6\xb4\x39" +
	"\x88\xe2\x1a\xa5\xca\xff\xfe\xe1\x94\xff\x99\x03\xa3\xab\x72\x4f\xd4\xa0\x47\x06\x4f\x8c\x6b\x64\xee\xb4\x19\x23" +
	"\x10\xd7\xbb\xe7\x7b\x8b\x0f\x2b\x62\xfc\xba\x55\x35\xb6\xe3\x4c\x67\x6a\xa4\xdb\x37\x1a\x74\x8f\xfe\xae\x77\xf8" +
	"\x64\x3e\xf0\xb8\xf5\x9a\x51\x05\x5c\x1e\x26\x55\x91\x1c\x9e\x66\xd7\xc7\x0a\xfa\x96\x6f\xbc\xb0\xc5\xf0\x1d\xf9" +
	"\xbb\xaa\x71\x58\xc9\xe0\xa9\x4a\x76\x0d\xc5\x4b\xb5\xdf\xaa\x0a\x3e\x0d\xdc\x9b\x42\xe5\xc9\x83\xd2\xe3\x8c\x1e" +
	"\x6e\x18\xef\x97\x54\xc7\xc8\xff\x3c\xbd\x50\x46\x6c\xd9\xa8\xba\x7b\x7f\x47\x89\x53\xf2\xda\x59\xfd\x33\x4e\xb1" +
	"\xe1\x24\x4c\xb4\x47\x1a\xda\x13\xd9\xcf\xc1\x38\x68\xd2\x0c\x3c\x8c\xcf\xd4\xcb\x24\x75\xde\xe1\x62\xd3\x7e\xe7" +
	"\x1c\xbc\x7f\xdf\x25\x4e\x1d\xfa\x5a\x36\x70\x35\x94\x62\x30\x71\x22\xee\x30\x97\x00\x5d\xc0\x23\xe0\xc8\xb5\xbd" +
	"\x88\x14\x35\xf2\xf8\x28\xe7\x6a\x14\xb1\x49\xa3\xa3\xc4\x33\x34\x3a\xc9\xe3\x2c\x8d\xe6\xbf\x56\xa4\x93\x17\xd8" +
	"\x39\x29\x69\xa2\x8c\xb9\xb9\x47\x2f\x4b\x1b\x24\x3e\xd0\x22\xbf\xfe\xb6\xfa\x93\xbc\xc4\x6f\xa4\x0c\x9a\xfc\xf2" +
	"\xa4\x00\xfd\xff\xc0\xf5\x39\x8d\x8e\xfe\x9f\xcc\xb3\x76\x32\xff\x37\x00\x00\xff\xff\xa0\x43\x40\x92\x2c\x08\x00" +
	"\x00"

func bindataStaticJsLogsjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticJsLogsjs,
		"static/js/logs.js",
	)
}



func bindataStaticJsLogsjs() (*asset, error) {
	bytes, err := bindataStaticJsLogsjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/js/logs.js",
		size: 2092,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595248687, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticJsRequestjs = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4f\xc3\x30\x10\x85\xf7\xfc\x8a\x93\x97\x3a\x2a\x44\xec\xa6" +
	"\x4b\x4b\x25\x90\x80\x2e\x6c\x88\xc1\x89\xaf\xc9\x81\x7b\x2e\xf1\xa5\x24\x42\xf9\xef\xc8\x2d\xc9\x02\x1e\x2c\xcb" +
	"\x7a\xef\x7b\x9f\x0b\x55\x77\x40\x96\xc2\x3a\xb7\x3d\x21\xcb\x23\x45\x41\xc6\x56\xab\xbb\xdd\xd3\x26\xb0\xa4\xbf" +
	"\x60\x1d\x3a\x75\x05\xfb\x8e\x2b\xa1\xc0\xa0\x73\xf8\xce\x00\x00\x1a\xff\x1e\x0b\x62\x92\x7b\xaa\x1b\x4f\x75\x23" +
	"\xc4\xf5\x8e\x53\x43\xe7\xe6\x1c\x09\x47\xe4\x17\x5b\xea\x45\x8b\x9f\x1d\x46\xb9\x16\x5b\x2e\x72\x93\x8d\xb9\xc9" +
	"\xb2\x99\x38\xa5\xc4\x96\xcf\xf6\x80\x13\xdf\xa3\x00\x5d\x38\x55\xe0\x28\xd0\xc3\x0a\x66\xe9\x1a\x65\xeb\x31\x3d" +
	"\xe3\x7a\xd8\x78\x1b\x63\xea\x6a\x75\x22\xfc\x4a\x33\xea\x57\x61\x1f\x5a\xd0\x04\x2b\xb8\x31\x40\x70\x0b\x7d\xe1" +
	"\x91\x6b\x69\x0c\xd0\x72\x39\x4d\xa5\xd3\xbf\xd2\x5b\x11\x65\xf0\x58\x38\x8a\x47\x6f\x07\x58\x81\xe2\xc0\xa8\x2e" +
	"\xa4\xf1\x7c\xff\x23\xb0\x1e\x1e\xdc\x2c\xff\x17\x51\xfa\x50\x7d\x28\x93\x8d\x3f\x01\x00\x00\xff\xff\x8e\x57\x7c" +
	"\xf5\x71\x01\x00\x00"

func bindataStaticJsRequestjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticJsRequestjs,
		"static/js/request.js",
	)
}



func bindataStaticJsRequestjs() (*asset, error) {
	bytes, err := bindataStaticJsRequestjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/js/request.js",
		size: 369,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595244944, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticJsUtilsjs = "" +
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xff\x6f\xe2\xb6\x1b\xfe\x3d\x7f\xc5\xa3\xe8\xf3\x39\x92\x1d\x31" +
	"\x4e\x48\x19\x05\xc2\xb4\xdd\x75\xdb\x49\x45\x9b\x54\xf6\x13\x42\xaa\x49\xdc\x10\x29\x38\x2c\x36\x70\xed\x89\xff" +
	"\x7d\xb2\x9d\x40\xc7\xa9\x1a\xa7\x69\xa9\xea\xda\x7e\x9f\xf7\x79\xde\x6f\x6e\x5a\x09\xa9\x20\xaa\x03\x12\xcc\x98" +
	"\x5a\x93\xba\xda\x89\xcc\xf3\x04\x3f\xe0\x23\x53\xdc\xf3\x7d\x92\x73\x35\x2f\x36\xdc\xf3\xd1\x43\x48\x29\xf5\xc7" +
	"\x8e\x75\xd3\xb7\xf7\x7c\xcf\x4b\x89\x04\x5f\x1c\x00\x90\x29\x2b\xf9\x08\x8b\x28\xee\x62\x40\xed\x6f\xb8\xec\x1a" +
	"\xdb\x4e\x14\x4a\x8e\xb0\xe8\x64\xe8\x74\xd1\x59\x9b\x75\x63\x56\x89\xce\xd2\x39\xb6\xbc\x92\xa7\x95\xc8\xe4\xbc" +
	"\x7a\x50\x75\x21\x72\x24\x28\x84\xe2\xf5\x9e\x95\x48\xa6\xa7\xfd\xbc\xb2\xda\x5e\x7b\xd1\x7d\x15\xd0\x29\xc6\x7d" +
	"\xc1\x0f\xb3\xaa\xe6\x9f\x36\x2c\xe7\x48\xf0\xe8\x4c\xe4\x3e\x47\x5a\x32\x29\x13\x97\x3f\xf3\xa0\xd0\x16\x17\x52" +
	"\x3d\x97\x3c\x71\x0f\x45\xa6\xd6\xa3\x90\x44\x7c\x33\x5e\xf3\x22\x5f\xab\xe6\xe0\xe2\xf3\xa6\x14\x32\x71\xd7\x4a" +
	"\x6d\x47\xbd\xde\xe1\x70\x20\x87\x3e\xa9\xea\xbc\x17\x51\x4a\x7b\x72\x9f\xbb\x46\xed\xa7\xea\x73\xe2\x52\x50\x44" +
	"\x11\xc2\x81\x3b\x35\xb9\x4f\xb6\x4c\xad\x91\x25\xee\x2c\x1c\x90\x9b\x01\xc2\x3e\x19\x0c\xd8\x10\x43\x68\x64\x18" +
	"\x84\x21\xe9\x47\xa0\xf7\xa4\x8f\x21\xf9\x9e\x85\x08\xad\x01\x34\x08\x49\x1c\x95\x31\xb9\xbd\x09\xf4\x72\xf6\x41" +
	"\xe3\x63\x6c\x30\xb6\x57\x6e\x30\x6e\xc1\xc9\x16\x10\x1a\x12\x1a\xbe\x6c\x82\x5b\x72\x6b\x38\xd9\x00\x03\x83\xa6" +
	"\x18\x92\x78\x08\x7a\x1f\xde\x92\xfe\x10\x43\xed\x15\xc5\x66\x39\x63\x82\x06\x13\x91\x18\xc3\x32\x26\x91\xa6\x8d" +
	"\xe2\xb5\xe6\x9c\x85\x94\xdc\x22\x8c\x58\x8c\xd8\x46\xa6\xf1\xb0\x27\x1b\xcd\xf0\x65\x43\x83\x88\x45\x88\x9a\x0b" +
	"\x1a\xc4\xb0\x27\xfb\x13\xbf\xb4\x95\xea\xe9\x52\x4d\x9d\x89\xae\xe8\xd4\x79\x1c\x3b\x4d\x27\x2f\xfb\x8e\x04\xaf" +
	"\x5a\x5f\xda\xb6\xeb\x01\xb1\x93\x68\x9d\xd2\xd5\xcf\x3b\xa1\x91\x59\x17\xe9\x2b\xab\xfe\x4a\xae\xb0\x5a\x21\x41" +
	"\xb6\x08\x97\xf8\x3f\xd2\x05\x6d\x26\xb5\xfd\x18\x33\xae\xda\x1c\x60\xb5\xd2\x0f\x40\x83\xc6\xce\xdf\x00\x8c\x61" +
	"\x0a\x8a\x1f\xf4\xe6\x3d\x52\x8d\x1e\xa1\xd3\x39\xa3\x6a\xae\x76\xb5\xc0\x22\x5b\xd0\x25\xde\x83\xb1\x2e\x56\xab" +
	"\x86\xe5\x68\xff\xe8\x58\x6a\x59\x2a\x24\x4d\x26\xc4\xbc\x24\xb2\x61\x5b\x4f\xc7\x5e\x74\xc1\x2e\xc2\x6f\x58\x19" +
	"\x91\x65\x91\x72\xaf\xf0\x49\xcd\xb3\x5d\xca\xbd\x73\xae\x19\xbe\x43\xea\x37\x42\xfe\x99\xcc\x18\xbd\x45\xd6\x96" +
	"\x8d\x98\xa7\xb9\x28\x96\x4b\xdf\x3f\xf1\xb7\x74\xa6\x84\x5d\x2c\x3a\x9d\xee\xa9\x07\xcb\x86\xb4\x89\x41\x47\x6e" +
	"\xea\x72\x1c\x3b\xce\xd3\x4e\xa4\xaa\xa8\x04\xd8\x76\x5b\x3e\xcf\xb8\x5a\x57\xd9\x87\xaa\xac\x6a\x6f\x63\xf6\x7e" +
	"\x93\x43\xf1\x84\xe6\x06\x49\x92\xc0\xfd\xe5\x6e\xee\xfa\x5f\xe7\xf7\x38\x91\x5b\x26\xda\x07\xbb\x62\x59\xce\x03" +
	"\xfb\x0f\x82\xd5\xcf\xee\xf4\x7f\x5f\x2c\xc7\x71\xd2\xd3\xb8\xe9\xa3\x4d\x16\xbc\x94\xfc\x2b\x89\xdf\x7f\x7b\xb8" +
	"\x5a\xa3\x10\x4f\xd5\xb7\xd2\xff\xf1\x9f\xb2\xff\x38\xff\xf0\xeb\xb5\xfc\x6a\x57\xff\xf9\x8d\xfc\x1f\xef\xee\xef" +
	"\xe6\x77\xd7\x0a\x64\x4c\xe4\xbc\x7e\x53\xc2\xf9\x37\x1d\x3c\x5e\x0e\xd1\x83\x62\x6a\x27\xed\x10\x49\xb3\x6f\xa3" +
	"\xb4\x27\x24\xd8\xb2\x5a\xf2\x4f\x42\xb5\xf6\xd3\x88\x35\x88\x69\x82\x88\x52\xbc\x7b\xd7\xba\x4c\xd0\xa7\xf4\xda" +
	"\x79\xdb\xa5\x29\x97\x52\xc7\x6a\xbd\xdf\x2c\xe8\x59\xad\x7f\xa1\x16\x5f\xad\xd6\xce\xc6\xd5\x52\xf1\x85\xd4\xcd" +
	"\xd5\x52\x07\x56\x8b\x42\xe4\x6f\xaa\xfd\x53\x1b\xcf\x53\x70\xe9\x7e\xfc\x2b\x00\x00\xff\xff\x61\x24\x4f\x4a\x5a" +
	"\x08\x00\x00"

func bindataStaticJsUtilsjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticJsUtilsjs,
		"static/js/utils.js",
	)
}



func bindataStaticJsUtilsjs() (*asset, error) {
	bytes, err := bindataStaticJsUtilsjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/js/utils.js",
		size: 2138,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1595249523, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"static/css/highlight.css":   bindataStaticCssHighlightcss,
	"static/css/watcher.css":     bindataStaticCssWatchercss,
	"static/html/dashboard.html": bindataStaticHtmlDashboardhtml,
	"static/html/footer.html":    bindataStaticHtmlFooterhtml,
	"static/html/head.html":      bindataStaticHtmlHeadhtml,
	"static/html/log.html":       bindataStaticHtmlLoghtml,
	"static/html/logs.html":      bindataStaticHtmlLogshtml,
	"static/html/request.html":   bindataStaticHtmlRequesthtml,
	"static/js/dashboard.js":     bindataStaticJsDashboardjs,
	"static/js/log.js":           bindataStaticJsLogjs,
	"static/js/logs.js":          bindataStaticJsLogsjs,
	"static/js/request.js":       bindataStaticJsRequestjs,
	"static/js/utils.js":         bindataStaticJsUtilsjs,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"static": {Func: nil, Children: map[string]*bintree{
		"css": {Func: nil, Children: map[string]*bintree{
			"highlight.css": {Func: bindataStaticCssHighlightcss, Children: map[string]*bintree{}},
			"watcher.css": {Func: bindataStaticCssWatchercss, Children: map[string]*bintree{}},
		}},
		"html": {Func: nil, Children: map[string]*bintree{
			"dashboard.html": {Func: bindataStaticHtmlDashboardhtml, Children: map[string]*bintree{}},
			"footer.html": {Func: bindataStaticHtmlFooterhtml, Children: map[string]*bintree{}},
			"head.html": {Func: bindataStaticHtmlHeadhtml, Children: map[string]*bintree{}},
			"log.html": {Func: bindataStaticHtmlLoghtml, Children: map[string]*bintree{}},
			"logs.html": {Func: bindataStaticHtmlLogshtml, Children: map[string]*bintree{}},
			"request.html": {Func: bindataStaticHtmlRequesthtml, Children: map[string]*bintree{}},
		}},
		"js": {Func: nil, Children: map[string]*bintree{
			"dashboard.js": {Func: bindataStaticJsDashboardjs, Children: map[string]*bintree{}},
			"log.js": {Func: bindataStaticJsLogjs, Children: map[string]*bintree{}},
			"logs.js": {Func: bindataStaticJsLogsjs, Children: map[string]*bintree{}},
			"request.js": {Func: bindataStaticJsRequestjs, Children: map[string]*bintree{}},
			"utils.js": {Func: bindataStaticJsUtilsjs, Children: map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
